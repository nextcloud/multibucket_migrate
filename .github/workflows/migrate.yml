name: Migration test

on:
  pull_request:
  push:

env:
  APP_NAME: multibucket_migrate

jobs:
  migrate:
    runs-on: ubuntu-latest

    strategy:
      fail-fast: false
      matrix:
        databases: ['sqlite']
        server-versions: ['stable22', 'stable21', 'stable20', 'stable19', 'stable18', 'stable17', 'stable16', 'stable15']
        include:
          - server-versions: stable22
            php-versions: 7.4
          - server-versions: stable21
            php-versions: 7.4
          - server-versions: stable20
            php-versions: 7.4
          - server-versions: stable19
            php-versions: 7.4
          - server-versions: stable18
            php-versions: 7.4
          - server-versions: stable17
            php-versions: 7.3
          - server-versions: stable16
            php-versions: 7.3
          - server-versions: stable15
            php-versions: 7.3

    name: php-${{ matrix.server-versions }}-${{ matrix.php-versions }}

    services:
      s3:
        image: localstack/localstack:0.12.7
        ports:
          - 4566:4566
        env:
          SERVICES: s3

    steps:
      - name: Checkout server
        uses: actions/checkout@v2
        with:
          repository: nextcloud/server
          ref: ${{ matrix.server-versions }}
          submodules: true

      - name: Checkout app
        uses: actions/checkout@v2
        with:
          path: apps/${{ env.APP_NAME }}

      - name: Set up php ${{ matrix.php-versions }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpunit
          extensions: mbstring, iconv, fileinfo, intl, sqlite, pdo_sqlite

      - name: Set up Nextcloud
        env:
          DB_PORT: 4444
        run: |
          mkdir data
          cp apps/${{ env.APP_NAME }}/ci-config.php config/config.php
          ./occ maintenance:install --verbose --database=${{ matrix.databases }} --database-name=nextcloud --database-host=127.0.0.1 --database-port=$DB_PORT --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass password
          ./occ app:enable ${{ env.APP_NAME }}
          php -S localhost:8080 &

      - name: Setup before situation
        run: |
          OC_PASS=test ./occ user:add test --password-from-env
          curl -X PUT -u test:test http://localhost:8080/remote.php/dav/files/test/foo.txt --data 'foobar'
      - name: Migrate
        run: |
          FILE=$(curl -s -u test:test http://localhost:8080/remote.php/dav/files/test/foo.txt)
          [[ $FILE == "foobar" ]]

          ./occ multibucket_migrate:list test

          BUCKET=$(./occ user:setting test homeobjectstore bucket | tr -d '[:space:]')
          USERS=$(./occ multibucket_migrate:by-bucket $BUCKET | tr -d '[:space:]')
          [[ $USERS == "test" ]]

          ./occ multibucket_migrate:move_user test target-bucket
          USERS=$(./occ multibucket_migrate:by-bucket target-bucket | tr -d '[:space:]')
          [[ $USERS == "test" ]]

          BUCKET=$(./occ user:setting test homeobjectstore bucket | tr -d '[:space:]')
          [[ $BUCKET == "target-bucket" ]]

          FILE=$(curl -s -u test:test http://localhost:8080/remote.php/dav/files/test/foo.txt)
          [[ $FILE == "foobar" ]]
      - name: Migrate parallel
        run: |
          FILE=$(curl -s -u test:test http://localhost:8080/remote.php/dav/files/test/foo.txt)
          [[ $FILE == "foobar" ]]

          ./occ multibucket_migrate:list test

          BUCKET=$(./occ user:setting test homeobjectstore bucket | tr -d '[:space:]')
          USERS=$(./occ multibucket_migrate:by-bucket $BUCKET | tr -d '[:space:]')
          [[ $USERS == "test" ]]

          ./occ multibucket_migrate:move_user test new-target-bucket --parallel 10
          USERS=$(./occ multibucket_migrate:by-bucket new-target-bucket | tr -d '[:space:]')
          [[ $USERS == "test" ]]

          BUCKET=$(./occ user:setting test homeobjectstore bucket | tr -d '[:space:]')
          [[ $BUCKET == "new-target-bucket" ]]

          FILE=$(curl -s -u test:test http://localhost:8080/remote.php/dav/files/test/foo.txt)
          [[ $FILE == "foobar" ]]
